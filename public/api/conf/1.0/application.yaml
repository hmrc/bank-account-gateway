openapi: 3.0.0
info:
  title: Bank Account
  version: 1.0.2
  contact:
    name: CIP Insights & Reputation Team
    email: cip-insights-and-reputation-g@digital.hmrc.gov.uk
  description: "This API provides endpoints to verify bank account details and to\
    \ get insights about a bank account. The API is designed to be used by HMRC services\
    \ to validate personal and business bank accounts, ensuring that the provided\
    \ details match valid bank accounts\n\n\n ```\n\nChange Log\n```\n\n  | Version\
    \ | Date | Author | Description |\n  |---|-----|------|-----|\n  | 1.0.0 | 28-05-2025\
    \ | Graham Cook | Initial draft of bank account API specification|\n  | 1.0.1\
    \ | 17-06-2025 | Graham Cook | Update from EIS review|\n  | 1.0.2 | 23-06-2025\
    \ | Graham Cook | Update from, EIS review|\n  | 1.0.3 | 01-07-2025 | Graham Cook\
    \ | Update to point to MDTP HOD|\n  | ?.?.? | dd-mm-yyyy | Change Owner Name |\
    \ Details of next version |"
  termsOfService: https://forms.office.com/Pages/ResponsePage.aspx?id=PPdSrBr9mkqOekokjzE54cRTj_GCzpRJqsT4amG0JK1UMkpBS1NUVDhWR041NjJWU0lCMVZUNk5NTi4u
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://test-api.service.hmrc.gov.uk/misc/bank-account
    description: Sandbox
  - url: https://api.service.hmrc.gov.uk/misc/bank-account
    description: Production
paths:
  /check/insights:
    post:
      summary: Bank account insights
      description: Get insights about a bank account
      operationId: Bankaccountinsights
      security:
        - applicationRestricted: []
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiscBankAccountCheckInsightsRequest'
            example:
              sortCode: '123456'
              accountNumber: '12345678'
        required: true
      responses:
        '200':
          description: Bank account insights
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiscBankAccountCheckInsightsResponse'
              example:
                correlationId: 1b817431-6a78-403c-a207-62eee9a593c1
                riskScore: 100
                reason: ACCOUNT_ON_WATCHLIST
        '400':
          description: Bad Request
          headers:
            CorrelationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                required:
                  - origin
                  - response
                type: object
                properties:
                  origin: {}
                  response:
                    oneOf:
                      - {}
                      - $ref: '#/components/schemas/errorResponseBody'
                additionalProperties: false
              examples:
                badRequest:
                  $ref: '#/components/examples/errorResponseBodyExample'
        '500':
          description: Internal Server Error
          headers:
            CorrelationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                required:
                  - origin
                  - response
                type: object
                properties:
                  origin: {}
                  response:
                    oneOf:
                      - {}
                      - $ref: '#/components/schemas/error500ResponseBody'
                additionalProperties: false
              examples:
                internalServerError:
                  $ref: '#/components/examples/error500ResponseBodyExample'
        '503':
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema: {}
      deprecated: false
  /verify/personal:
    post:
      summary: Verify personal bank account details
      description: Check if the provided personal bank account details match a valid
        bank account
      operationId: Verifypersonalbankaccountdetails
      security:
        - applicationRestricted: []
      parameters:
        - name: User-Agent
          in: header
          description: Calling service identifier
          required: true
          style: simple
          schema:
            type: string
            example: calling-service
      requestBody:
        description: Personal verify request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiscBankAccountVerifyPersonalRequest'
            example:
              account:
                sortCode: '991122'
                accountNumber: '12345678'
              subject:
                title: Mr
                name: John Smith
                dob: '1970-12-31'
        required: true
      responses:
        '200':
          description: Personal verify response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiscBankAccountVerifyPersonalResponse'
              example:
                accountNumberIsWellFormatted: 'yes'
                accountExists: 'yes'
                nameMatches: partial
                accountName: Mr Peter Smith
                nonStandardAccountDetailsRequiredForBacs: 'no'
                sortCodeIsPresentOnEISCD: 'yes'
                sortCodeSupportsDirectDebit: 'yes'
                sortCodeSupportsDirectCredit: 'yes'
                iban: GB25NWBK60080600724890
        '400':
          description: Bad Request
          headers:
            CorrelationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                required:
                  - origin
                  - response
                type: object
                properties:
                  origin: {}
                  response:
                    oneOf:
                      - {}
                      - $ref: '#/components/schemas/errorResponseBody'
                additionalProperties: false
              examples:
                badRequest:
                  $ref: '#/components/examples/errorResponseBodyExample'
        '500':
          description: Internal Server Error
          headers:
            CorrelationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                required:
                  - origin
                  - response
                type: object
                properties:
                  origin: {}
                  response:
                    oneOf:
                      - {}
                      - $ref: '#/components/schemas/error500ResponseBody'
                additionalProperties: false
              examples:
                internalServerError:
                  $ref: '#/components/examples/error500ResponseBodyExample'
        '503':
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema: {}
      deprecated: false
  /verify/business:
    post:
      summary: Verify business bank account details
      description: Check if the provided business bank account details match a valid
        bank account
      operationId: Verifybusinessbankaccountdetails
      security:
        - applicationRestricted: []
      parameters:
        - name: User-Agent
          in: header
          description: Calling service identifier
          required: true
          style: simple
          schema:
            type: string
            example: calling-service
      requestBody:
        description: Business verify request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiscBankAccountVerifyBusinessRequest'
            example:
              account:
                accountNumber: '14378881'
                sortCode: '463509'
              business:
                companyName: co ltd
                companyRegistrationNumber: '123456789'
        required: true
      responses:
        '200':
          description: Business verify response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MiscBankAccountVerifyBusinessResponse'
              example:
                accountNumberIsWellFormatted: 'yes'
                nonStandardAccountDetailsRequiredForBacs: 'no'
                sortCodeBankName: NATWEST
                sortCodeIsPresentOnEISCD: 'yes'
                sortCodeSupportsDirectDebit: 'no'
                sortCodeSupportsDirectCredit: 'no'
                iban: GB25NWBK60080600724890
                accountExists: 'yes'
                nameMatches: indeterminate
        '400':
          description: Bad Request
          headers:
            CorrelationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                required:
                  - origin
                  - response
                type: object
                properties:
                  origin: {}
                  response:
                    oneOf:
                      - {}
                      - $ref: '#/components/schemas/errorResponseBody'
                additionalProperties: false
              examples:
                badRequest:
                  $ref: '#/components/examples/errorResponseBodyExample'
        '500':
          description: Internal Server Error
          headers:
            CorrelationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                required:
                  - origin
                  - response
                type: object
                properties:
                  origin: {}
                  response:
                    oneOf:
                      - {}
                      - $ref: '#/components/schemas/error500ResponseBody'
                additionalProperties: false
              examples:
                internalServerError:
                  $ref: '#/components/examples/error500ResponseBodyExample'
        '503':
          description: Service Unavailable
          content:
            application/json;charset=UTF-8:
              schema: {}
      deprecated: false
components:
  securitySchemes:
    applicationRestricted:
      type: "oauth2"
      description: "HMRC supports OAuth 2.0 for authenticating application restricted\
        \ API requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header.\n\
        See https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/application-restricted-endpoints\
        \ for details.\n"
      flows:
        clientCredentials:
          tokenUrl: "https://api.service.hmrc.gov.uk/oauth/token"
          scopes: {}
  schemas:
    MiscBankAccountCheckInsightsResponse:
      title: MiscBankAccountCheckInsightsResponse
      required:
        - correlationId
        - riskScore
        - reason
      type: object
      properties:
        correlationId:
          description: A unique `UUID` to allow the request/response to be tracked
          type: string
        riskScore:
          description: Risk score
          maximum: 100
          minimum: 0
          type: number
        reason:
          description: Reason for risk score
          maxLength: 100
          type: string
    MiscBankAccountCheckInsightsRequest:
      title: MiscBankAccountCheckInsightsRequest
      required:
        - sortCode
        - accountNumber
      type: object
      properties:
        sortCode:
          description: The sort code for the bank account
          maxLength: 6
          minLength: 6
          type: string
        accountNumber:
          description: Account number for the bank account (Account numbers with a
            length less than 8 digits should be prefixed with zeros to pad it up to
            8 digits, e.g. 00123456)
          maxLength: 8
          minLength: 8
          type: string
    MiscBankAccountVerifyPersonalRequest:
      title: VerifyPersonalRequest
      required:
        - account
        - subject
      type: object
      properties:
        account:
          required:
            - accountNumber
            - sortCode
          type: object
          properties:
            accountNumber:
              description: The bank account number, 8 digits long
              maxLength: 8
              minLength: 8
              type: string
              example:
                - '79499414'
                - '07336121'
            sortCode:
              description: The bank sort code, 6 digits long (whitespace and/or dashes
                should be removed)
              maxLength: 6
              minLength: 6
              type: string
              example:
                - '832237'
        subject:
          description: Subject
          required:
            - name
          type: object
          properties:
            name:
              description: The subjects full name. This should include first and last
                names. Title is optional.
              maxLength: 100
              type: string
              example:
                - Mr Joe Bloggs
    MiscBankAccountVerifyPersonalResponse:
      title: VerifyPersonalResponse
      required:
        - accountNumberIsWellFormatted
        - nonStandardAccountDetailsRequiredForBacs
        - sortCodeIsPresentOnEISCD
        - sortCodeSupportsDirectDebit
        - sortCodeSupportsDirectCredit
        - accountExists
        - nameMatches
      type: object
      properties:
        accountNumberIsWellFormatted:
          $ref: '#/components/schemas/accountNumberIsWellFormattedEnum'
        nonStandardAccountDetailsRequiredForBacs:
          $ref: '#/components/schemas/nonStandardAccountDetailsRequiredForBacsEnum'
        sortCodeBankName:
          description: Sort code bank name
          maxLength: 100
          type: string
          example:
            - THE ROYAL BANK OF SCOTLAND PLC
        sortCodeIsPresentOnEISCD:
          $ref: '#/components/schemas/sortCodeIsPresentOnEISCDEnum'
        sortCodeSupportsDirectDebit:
          $ref: '#/components/schemas/sortCodeSupportsDirectDebitEnum'
        sortCodeSupportsDirectCredit:
          $ref: '#/components/schemas/sortCodeSupportsDirectCreditEnum'
        iban:
          description: The IBAN for the given account number / sort code
          maxLength: 100
          type: string
          example:
            - GB25NWBK60080600724890
        accountExists:
          $ref: '#/components/schemas/accountExistsEnum'
        nameMatches:
          $ref: '#/components/schemas/nameMatchesEnum'
        accountName:
          description: In the case of a partial name match, this will be the name
            on the account as reported by the third party
          maxLength: 100
          type: string
          example:
            - Mr Peter Smith
    MiscBankAccountVerifyBusinessRequest:
      title: VerifyBusinessRequest
      required:
        - account
        - business
      type: object
      properties:
        account:
          description: Account
          required:
            - accountNumber
            - sortCode
          type: object
          properties:
            accountNumber:
              title: Account Number
              description: The bank account number, 8 characters long
              maxLength: 8
              type: string
              example:
                - '14378881'
                - '07336121'
            sortCode:
              title: Sortcode
              description: The bank sort code, 6 characters long (whitespace and/or
                dashes should be removed)
              maxLength: 6
              type: string
              example:
                - '463509'
        business:
          description: Business
          required:
            - companyName
          type: object
          properties:
            companyName:
              title: Companyname
              description: The account name provided to the bank (usually the same
                as the registered company name, but with complex company setups this
                may not be true)
              maxLength: 100
              type: string
              example:
                - co ltd
    MiscBankAccountVerifyBusinessResponse:
      title: VerifyBusinessResponse
      required:
        - accountNumberIsWellFormatted
        - nonStandardAccountDetailsRequiredForBacs
        - sortCodeIsPresentOnEISCD
        - sortCodeSupportsDirectDebit
        - sortCodeSupportsDirectCredit
        - accountExists
        - nameMatches
      type: object
      properties:
        accountNumberIsWellFormatted:
          $ref: '#/components/schemas/accountNumberIsWellFormattedEnum'
        nonStandardAccountDetailsRequiredForBacs:
          $ref: '#/components/schemas/nonStandardAccountDetailsRequiredForBacsEnum'
        sortCodeBankName:
          description: Bank name associated with sort code
          maxLength: 100
          type: string
          example:
            - NATWEST
        sortCodeIsPresentOnEISCD:
          $ref: '#/components/schemas/sortCodeIsPresentOnEISCDEnum'
        sortCodeSupportsDirectDebit:
          $ref: '#/components/schemas/sortCodeSupportsDirectDebitEnum'
        sortCodeSupportsDirectCredit:
          $ref: '#/components/schemas/sortCodeSupportsDirectCreditEnum'
        iban:
          description: The IBAN for the given account number / sort code
          maxLength: 100
          type: string
          example:
            - GB25NWBK60080600724890
        accountExists:
          $ref: '#/components/schemas/accountExistsEnum'
        nameMatches:
          $ref: '#/components/schemas/nameMatchesEnum'
        accountName:
          description: In the case of a partial name match, this will be the name
            on the account as reported by the third party
          maxLength: 100
          type: string
          example:
            - ACME Inc
    correlationId:
      format: uuid
      description: Correlation ID - used for end to end traceability
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
      type: string
      example: 290jij88-8fya-hf82-g893-fhi98410fk22
    accountNumberIsWellFormattedEnum:
      description: "Account number with sort code is valid:\n * `yes` - The sort code\
        \ is known and the sort code and account number are correctly formatted and\
        \ their contents pass our checks\n * `no` - The sort code is known but the\
        \ account number and sort code combination did not pass our checks\n * `indeterminate`\
        \ - The sort code is unknown, it may be valid but more likely will not resolve\
        \ to an addressable bank account\n * `error` - There was an error attempting\
        \ to perform a modulus check\n"
      enum:
        - 'yes'
        - 'no'
        - indeterminate
        - error
      type: string
    nonStandardAccountDetailsRequiredForBacsEnum:
      description: "Non-standard account details required for BACS:\n * `yes` - Indicates\
        \ that a BACS transaction for this account will require additional information\
        \ (e.g. a Building Society roll number)\n * `no` - Indicates that a BACS transaction\
        \ for this account will NOT require additional information (e.g. a Building\
        \ Society roll number)\n * `inapplicable` - The sort code and/or account number\
        \ failed initial validation, and so no further checks were made\n * `error`\
        \ - There was an error when checking if branch requires non-standard details\n"
      enum:
        - 'yes'
        - 'no'
        - inapplicable
        - error
      type: string
    sortCodeIsPresentOnEISCDEnum:
      description: "Sortcode is present on EISCD:\n * `yes` - The sort code given\
        \ was found by the service\n * `no` - The sort code given was NOT found by\
        \ the service\n * `error` - There was an error checking the EISCD data\n"
      enum:
        - 'yes'
        - 'no'
        - error
      type: string
    sortCodeSupportsDirectDebitEnum:
      description: "Whether sortcode supports direct debit payment and setup:\n *\
        \ `yes` - The sort code supports direct debit payment and setup\n * `no` -\
        \ The sort code does not support direct debit payment or setup\n * `error`\
        \ - There was an error checking the EISCD data\n"
      enum:
        - 'yes'
        - 'no'
        - error
      type: string
    sortCodeSupportsDirectCreditEnum:
      description: "Whether sortcode supports direct credit payment:\n * `yes` - The\
        \ sort code supports direct credit payment\n * `no` - The sort code does not\
        \ support direct credit payment\n * `error` - There was an error checking\
        \ the EISCD data\n"
      enum:
        - 'yes'
        - 'no'
        - error
      type: string
    accountExistsEnum:
      description: "Account exists:\n * `yes` - The sort code and account number relate\
        \ to a bank account stored in the third party service\n * `no` - The third\
        \ party service asserted that the account number was not valid for the given\
        \ sort code\n * `indeterminate` - The sort code and account number were not\
        \ found in the third party service\n * `inapplicable` - The sort code and/or\
        \ account number failed initial validation, and so no further checks were\
        \ made\n * `error` - There was an error calling the third party service\n"
      enum:
        - 'yes'
        - 'no'
        - indeterminate
        - inapplicable
        - error
      type: string
    nameMatchesEnum:
      description: "Name matches:\n * `yes` - The provided subject name was found\
        \ to match the account holder name stored by the third party service\n * `no`\
        \ - No match was found for the provided subject name in the third party service\n\
        \ * `partial` - After normalisation, the provided business name was found\
        \ to be a close match to the one stored by the third party service E.g 'Mr\
        \ P Smith' vs 'Mr Peter Smith'.\n * `indeterminate` - The sort code and account\
        \ number did not resolve to an account stored in the third party service\n\
        \ * `inapplicable` - The sort code and/or account number failed initial validation,\
        \ and so no further checks were made\n * `error` - There was an error calling\
        \ the third party service\n"
      enum:
        - 'yes'
        - 'no'
        - partial
        - indeterminate
        - inapplicable
        - error
      type: string
    errorResponseBody:
      title: Error response body
      type: object
      properties:
        error:
          description: error
          type: string
    error500ResponseBody:
      title: Error 500 response body
      type: object
      properties:
        error:
          description: error
          type: string
  parameters:
    correlationId:
      name: CorrelationId
      in: header
      description: Correlation ID - used for end to end traceability
      required: true
      schema:
        maxLength: 36
        minLength: 8
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
        example: 290jij88-8fya-hf82-g893-fhi98410fk22
    userAgent:
      name: User-Agent
      in: header
      description: Calling service identifier
      required: true
      schema:
        maxLength: 50
        minLength: 1
        type: string
        example: calling-service
  headers:
    correlationId:
      required: true
      schema:
        $ref: '#/components/schemas/correlationId'
  examples:
    errorResponseBodyExample:
      value:
        error: '{code: REQUEST_DOWNSTREAM, desc: An issue occurred when the downstream
          service tried to handle the request}'
    error500ResponseBodyExample:
      value:
        error: '{code: REQUEST_DOWNSTREAM, desc: An issue occurred when the downstream
          service tried to handle the request}'
